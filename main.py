from flask import Flask, render_template, request
from agent import generate_code, generate_tests, generate_docs
from github_integration import create_github_pr
from history import log_task, get_history

app = Flask(__name__)

@app.route("/", methods=["GET", "POST"])
def index():
    code = ""
    tests = ""
    docs = ""
    github_result = ""

    if request.method == "POST":
        task = request.form["task"]
        function_name = request.form.get("function_name", "")
        push_to_github = "push_to_github" in request.form

        code = generate_code(task)
        tests = generate_tests(function_name) if function_name else ""
        docs = generate_docs()

        with open("main.py", "w") as f:
            f.write(code)
        if function_name:
            with open("test_math.py", "w") as f:
                f.write(tests)
        with open("README.md", "w") as f:
            f.write(docs)

        if push_to_github:
            github_result = create_github_pr(
                repo_name=request.form["repo"],
                base_branch="main",
                new_branch="feature/ai-update",
                title="AI-generated code update",
                body="This PR was automatically generated by our AI agent.",
                file_path="main.py",
                file_content=code
            )

        log_task(task, code, tests, docs)

    return render_template("index.html", code=code, tests=tests, docs=docs, github_result=github_result)

@app.route("/history")
def history_page():
    return render_template("history.html", history=get_history())

if __name__ == "__main__":
    app.run()